{
  "definitions": {
    "moduleRef": {
      "metadata": {
        "description": "A reference to a module defined somewhere else"
      },
      "properties": {
        "name": {
          "metadata": {
            "description": "The referenced module's name"
          },
          "type": "string"
        },
        "version": {
          "metadata": {
            "description": "The referenced module's version"
          },
          "type": "string"
        }
      }
    },
    "dataTypeRef": {
      "metadata": {
        "description": "A reference to a data type defined somewhere else"
      },
      "properties": {
        "name": {
          "metadata": {
            "description": "The referenced data type's name"
          },
          "type": "string"
        }
      },
      "optionalProperties": {
        "module": {
          "metadata": {
            "description": "The module in which the referenced data type is defined. This can be omitted when used inside the module that defines the referenced data type."
          },
          "type": "string"
        }
      }
    },
    "argumentType": {
      "metadata": {
        "description": "The type of a function argument"
      },
      "optionalProperties": {
        "import": {
          "metadata": {
            "description": "Use a predefined data type, either from this module or another one, as opposed to a built in data type"
          },
          "ref": "dataTypeRef"
        },
        "builtin": {
          "metadata": {
            "description": "A built in data type, i.e. one that is part of the node standard library, like 'string', 'number[]' etc."
          },
          "type": "string"
        }
      }
    },
    "argument": {
      "metadata": {
        "description": "A function argument"
      },
      "properties": {
        "name": {
          "metadata": {
            "description": "The argument's name"
          },
          "type": "string"
        },
        "type": {
          "metadata": {
            "description": "The argument's data type"
          },
          "ref": "argumentType"
        }
      },
      "optionalProperties": {
        "doc": {
          "metadata": {
            "description": "Argument documentation"
          },
          "type": "string"
        }
      }
    },
    "function": {
      "metadata": {
        "description": "A function exposed by a service that can be invoked via RPC"
      },
      "properties": {
        "name": {
          "metadata": {
            "description": "The function's name"
          },
          "type": "string"
        }
      },
      "optionalProperties": {
        "doc": {
          "metadata": {
            "description": "Function documentation"
          },
          "type": "string"
        },
        "arguments": {
          "metadata": {
            "description": "Arguments that can be passed to this function. May be omitted if the function takes no arguments"
          },
          "elements": {
            "ref": "argument"
          }
        },
        "returnType": {
          "metadata": {
            "description": "The function's return type. An object of this type will be published on the function's response topic once the function completes"
          },
          "ref": "argumentType"
        }
      }
    },
    "interface": {
      "metadata": {
        "description": "An interface, resembling a set of functions that make up a service's capabilities"
      },
      "properties": {
        "name": {
          "metadata": {
            "description": "The interface's name"
          },
          "type": "string"
        },
        "functions": {
          "metadata": {
            "description": "The functions provided by services implementing this interface"
          },
          "elements": {
            "ref": "function"
          }
        }
      },
      "optionalProperties": {
        "doc": {
          "metadata": {
            "description": "Interface documentation"
          },
          "type": "string"
        }
      }
    },
    "interfaceRef": {
      "metadata": {
        "description": "A reference to an interface defined somewhere else"
      },
      "properties": {
        "name": {
          "metadata": {
            "description": "The referenced interface's name"
          },
          "type": "string"
        },
        "module": {
          "metadata": {
            "description": "The module in which the referenced interface is defined"
          },
          "type": "string"
        }
      }
    },
    "service": {
      "properties": {
        "name": {
          "type": "string"
        },
        "interfaces": {
          "elements": {
            "ref": "interfaceRef"
          }
        }
      },
      "optionalProperties": {
        "properties": {
          "values": {
            "type": "string"
          }
        }
      }
    },
    "serviceReference": {
      "properties": {
        "name": {
          "metadata": {
            "description": "The the name of the referenced service interface."
          },
          "type": "string"
        },
        "module": {
          "metadata": {
            "description": "The module in which the referenced service interface is defined."
          },
          "type": "string"
        }
      },
      "optionalProperties": {
        "cardinality": {
          "enum": [
            "AT_LEAST_ONE",
            "MANDATORY",
            "MULTIPLE",
            "OPTIONAL"
          ]
        },
        "policy": {
          "enum": [
            "STATIC",
            "DYNAMIC"
          ]
        },
        "properties": {
          "elements": {
            "values": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "discriminator": "moduleType",
  "mapping": {
    "API": {
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        }
      },
      "optionalProperties": {
        "dependencies": {
          "values": {
            "type": "string"
          }
        },
        "dataTypes": {
          "metadata": {
            "description": "A JSON object describing data types, in which every key is the name of a data type and the value must be a valid JTD schema describing the data type's structure."
          }
        },
        "interfaces": {
          "elements": {
            "ref": "interface"
          }
        }
      },
      "additionalProperties": true
    },
    "SERVICE_PROVIDER": {
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "dependencies": {
          "values": {
            "type": "string"
          }
        },
        "service": {
          "ref": "service"
        }
      },
      "optionalProperties": {
        "serviceReferences": {
          "elements": {
            "ref": "serviceReference"
          }
        }
      },
      "additionalProperties": true
    },
    "COMPONENT": {
      "properties": {
        "name": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "component": {
          "type": "string"
        }
      },
      "optionalProperties": {
        "dependencies": {
          "values": {
            "type": "string"
          }
        },
        "serviceReferences": {
          "elements": {
            "ref": "serviceReference"
          }
        }
      },
      "additionalProperties": true
    }
  }
}